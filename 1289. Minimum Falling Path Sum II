class Solution:
    def minFallingPathSum(self, grid: List[List[int]]) -> int:
        n = len(grid)
        if n == 1:
            return grid[0][0]
        dp = [[inf]*(n+1) for _ in range(n+1)]
        for i in range(n+1):
            dp[i][0] = 0
            dp[0][i] = 0
        for i in range(1, n+1):
            for j in range(1, n+1):
                if j == 1:
                    dp[i][j] = min(min(dp[i-1][2:])+grid[i-1][0], dp[i][j])
                elif j == n:
                    dp[i][j] = min(min(dp[i-1][1:n])+grid[i-1][n-1], dp[i][j])
                else:
                    dp[i][j] = min(min(min(dp[i-1][1:j]), min(dp[i-1][j+1:]))+grid[i-1][j-1], dp[i][j])
        return min(dp[n][1:])

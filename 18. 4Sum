class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        if (n < 4){
            return {};
        }
        for (int i = 0; i < n - 3; i++){
            if (i && nums[i] == nums[i - 1]){
                continue;
            }
            for (int j = i + 1; j < n - 2; j++){
                if (j > i + 1 && nums[j] == nums[j - 1]){
                    continue;
                }
                int l = j + 1, k = n - 1;
                while (l < k) {
                    if ((long)nums[i] + (long)nums[j] == target - (long)nums[l] - (long)nums[k]){
                        ans.push_back({nums[i], nums[j], nums[l], nums[k]});
                        l++;
                        k--;
                        while (l < k && nums[l] == nums[l - 1]){
                        l++;
                        }
                        while (l < k && nums[k] == nums[k + 1]){
                            k--;
                        }
                    }
                    else if ((long)nums[i] + (long)nums[j] > target - (long)nums[l] - (long)nums[k]){
                        k--;
                    }
                    else {
                        l++;
                    }
                }
            }
        }
        return ans;
    }
};
